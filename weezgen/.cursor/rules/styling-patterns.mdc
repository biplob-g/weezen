# Styling and Tailwind CSS Patterns for WeezGen

## Tailwind Configuration

### Custom Colors
Reference [tailwind.config.js](mdc:tailwind.config.js):
```javascript
module.exports = {
  theme: {
    extend: {
      colors: {
        primary: '#7612fa',
        secondary: '#9333EA',
        accent: '#F59E0B',
        gravel: '#6B7280',
        iridium: '#9CA3AF',
        orange: '#F97316',
        cn: '#8B5CF6',
        platinum: '#E5E7EB',
      },
    },
  },
};
```

### Font Configuration
```javascript
theme: {
  extend: {
    fontFamily: {
      'dm-sans': ['DM Sans', 'sans-serif'],
    },
  },
},
```

## Utility Functions

### Class Name Merging
Reference [lib/utils.ts](mdc:lib/utils.ts):
```typescript
import { clsx, type ClassValue } from "clsx";
import { twMerge } from "tailwind-merge";

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}
```

### Usage Patterns
```typescript
// Conditional classes
const buttonClasses = cn(
  "base-button-styles",
  isPrimary && "bg-primary text-white",
  isDisabled && "opacity-50 cursor-not-allowed",
  className
);

// Component with dynamic styling
<div className={cn(
  "flex items-center gap-2 p-4 rounded-lg",
  variant === "primary" && "bg-primary text-white",
  variant === "secondary" && "bg-secondary text-white",
  size === "sm" && "text-sm",
  size === "lg" && "text-lg"
)}>
```

## Component Styling Patterns

### Responsive Design
```typescript
// Mobile-first approach
<div className="
  w-full 
  md:w-1/2 
  lg:w-1/3 
  xl:w-1/4
  p-4 
  md:p-6 
  lg:p-8
">
  {/* Content */}
</div>
```

### Flexbox Patterns
```typescript
// Common flex patterns
<div className="flex items-center justify-between">
  <div className="flex items-center gap-2">
    <Icon />
    <span>Label</span>
  </div>
  <Button>Action</Button>
</div>

// Centered content
<div className="flex items-center justify-center min-h-screen">
  <div className="text-center">
    {/* Centered content */}
  </div>
</div>
```

### Grid Layouts
```typescript
// Responsive grid
<div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
  {items.map(item => (
    <Card key={item.id}>{item.content}</Card>
  ))}
</div>

// Auto-fit grid
<div className="grid grid-cols-auto-fit gap-4">
  {items.map(item => (
    <Card key={item.id}>{item.content}</Card>
  ))}
</div>
```

## Dark Mode Support

### Theme Provider
```typescript
// components/provider/theme-provider.tsx
"use client";

import { ThemeProvider as NextThemesProvider } from "next-themes";

export function ThemeProvider({ children }: { children: React.ReactNode }) {
  return (
    <NextThemesProvider
      attribute="class"
      defaultTheme="system"
      enableSystem
    >
      {children}
    </NextThemesProvider>
  );
}
```

### Dark Mode Classes
```typescript
// Dark mode variants
<div className="
  bg-white 
  dark:bg-gray-900 
  text-gray-900 
  dark:text-white
  border 
  border-gray-200 
  dark:border-gray-700
">
  {/* Content */}
</div>
```

## Animation and Transitions

### Hover Effects
```typescript
<button className="
  px-4 
  py-2 
  bg-primary 
  text-white 
  rounded-lg 
  transition-all 
  duration-200 
  hover:bg-primary/90 
  hover:scale-105 
  active:scale-95
">
  Click me
</button>
```

### Loading States
```typescript
<div className="
  animate-pulse 
  bg-gray-200 
  dark:bg-gray-700 
  rounded-lg 
  h-4 
  w-full
">
</div>
```

### Custom Animations
```typescript
// Add to tailwind.config.js
module.exports = {
  theme: {
    extend: {
      keyframes: {
        fadeIn: {
          '0%': { opacity: '0', transform: 'translateY(10px)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
        slideIn: {
          '0%': { transform: 'translateX(-100%)' },
          '100%': { transform: 'translateX(0)' },
        },
      },
      animation: {
        'fade-in': 'fadeIn 0.3s ease-out',
        'slide-in': 'slideIn 0.3s ease-out',
      },
    },
  },
};
```

## Form Styling

### Input Fields
```typescript
<input
  className="
    w-full 
    px-3 
    py-2 
    border 
    border-gray-300 
    dark:border-gray-600 
    rounded-md 
    focus:outline-none 
    focus:ring-2 
    focus:ring-primary 
    focus:border-transparent
    bg-white 
    dark:bg-gray-800 
    text-gray-900 
    dark:text-white
  "
  placeholder="Enter text..."
/>
```

### Form Layout
```typescript
<form className="space-y-6">
  <div className="space-y-2">
    <label className="block text-sm font-medium text-gray-700 dark:text-gray-300">
      Email
    </label>
    <input
      type="email"
      className="w-full px-3 py-2 border rounded-md focus:ring-2 focus:ring-primary"
    />
  </div>
  
  <button
    type="submit"
    className="w-full px-4 py-2 bg-primary text-white rounded-md hover:bg-primary/90"
  >
    Submit
  </button>
</form>
```

## Card Components

### Basic Card
```typescript
<div className="
  bg-white 
  dark:bg-gray-800 
  rounded-lg 
  shadow-sm 
  border 
  border-gray-200 
  dark:border-gray-700 
  p-6
">
  <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
    Card Title
  </h3>
  <p className="mt-2 text-gray-600 dark:text-gray-400">
    Card content goes here
  </p>
</div>
```

### Interactive Card
```typescript
<div className="
  bg-white 
  dark:bg-gray-800 
  rounded-lg 
  shadow-sm 
  border 
  border-gray-200 
  dark:border-gray-700 
  p-6 
  hover:shadow-md 
  transition-shadow 
  duration-200 
  cursor-pointer
">
  {/* Card content */}
</div>
```

## Layout Patterns

### Sidebar Layout
```typescript
<div className="flex h-screen">
  {/* Sidebar */}
  <aside className="
    w-64 
    bg-gray-50 
    dark:bg-gray-900 
    border-r 
    border-gray-200 
    dark:border-gray-700
  ">
    {/* Sidebar content */}
  </aside>
  
  {/* Main content */}
  <main className="flex-1 overflow-auto">
    {/* Page content */}
  </main>
</div>
```

### Header Layout
```typescript
<header className="
  bg-white 
  dark:bg-gray-800 
  border-b 
  border-gray-200 
  dark:border-gray-700 
  px-6 
  py-4
">
  <div className="flex items-center justify-between">
    <h1 className="text-xl font-semibold text-gray-900 dark:text-white">
      Dashboard
    </h1>
    <div className="flex items-center gap-4">
      {/* Header actions */}
    </div>
  </div>
</header>
```

## Spacing and Sizing

### Consistent Spacing
```typescript
// Use consistent spacing scale
<div className="space-y-4"> {/* 16px gap */}
  <div className="p-4"> {/* 16px padding */}
    <h2 className="mb-2">Title</h2> {/* 8px margin bottom */}
    <p className="text-sm text-gray-600">Content</p>
  </div>
</div>
```

### Responsive Sizing
```typescript
<div className="
  w-full 
  max-w-sm 
  md:max-w-md 
  lg:max-w-lg 
  xl:max-w-xl
  mx-auto
">
  {/* Responsive container */}
</div>
```

## Accessibility

### Focus States
```typescript
<button className="
  px-4 
  py-2 
  bg-primary 
  text-white 
  rounded-md 
  focus:outline-none 
  focus:ring-2 
  focus:ring-primary 
  focus:ring-offset-2
">
  Accessible Button
</button>
```

### Screen Reader Support
```typescript
<div className="sr-only">
  Screen reader only content
</div>

<button aria-label="Close dialog" className="...">
  <XIcon />
</button>
```

## Performance Tips

### JIT Compilation
```typescript
// Use arbitrary values sparingly
<div className="w-[200px] h-[100px]">
  {/* Fixed size */}
</div>

// Prefer utility classes
<div className="w-48 h-24">
  {/* Standard size */}
</div>
```

### CSS Custom Properties
```typescript
// Use CSS variables for dynamic values
<div 
  className="bg-primary text-white"
  style={{ '--primary-color': theme.primaryColor }}
>
  Dynamic styling
</div>
```
description:
globs:
alwaysApply: false
---
